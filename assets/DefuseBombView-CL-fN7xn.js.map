{"version":3,"file":"DefuseBombView-CL-fN7xn.js","sources":["../../src/views/DefuseBombView.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport CountdownTimer from '../components/shared/CountdownTimer.vue';\n\nconst router = useRouter();\nconst timerRef = ref<InstanceType<typeof CountdownTimer> | null>(null);\n\n// Device orientation API variables\nconst isDeviceOrientationSupported = ref(!!window.DeviceOrientationEvent);\nconst deviceOrientation = ref<{ alpha: number | null; beta: number | null; gamma: number | null }>({\n  alpha: null, // z-axis rotation (0-360)\n  beta: null,  // x-axis rotation (-180 to 180)\n  gamma: null  // y-axis rotation (-90 to 90)\n});\nconst errorMessage = ref('');\nconst permissionGranted = ref(false);\n\n// Defuse state variables\nconst targetAchieved = ref(false);\nconst stabilityTime = ref(0);\nconst requiredStabilityTime = 5; // 5 seconds of stability required to defuse\nconst stabilityInterval = ref<number | null>(null);\n\n// Feedback variables for user\nconst betaDeviation = computed(() => {\n  if (deviceOrientation.value.beta === null) return null;\n  return Math.abs(deviceOrientation.value.beta);\n});\n\nconst gammaDeviation = computed(() => {\n  if (deviceOrientation.value.gamma === null) return null;\n  return Math.abs(deviceOrientation.value.gamma);\n});\n\nconst levelingAccuracy = computed(() => {\n  if (betaDeviation.value === null || gammaDeviation.value === null) return 0;\n  \n  // Calculate how level the device is (0-100%)\n  const maxBetaDeviation = 15;  // max degrees off level for beta\n  const maxGammaDeviation = 15; // max degrees off level for gamma\n  \n  const betaAccuracy = Math.max(0, 100 - (betaDeviation.value / maxBetaDeviation * 100));\n  const gammaAccuracy = Math.max(0, 100 - (gammaDeviation.value / maxGammaDeviation * 100));\n  \n  return Math.min(betaAccuracy, gammaAccuracy);\n});\n\n// Check if device is level enough\nconst isLevelEnough = computed(() => {\n  if (betaDeviation.value === null || gammaDeviation.value === null) return false;\n  \n  // Consider device level when beta and gamma are close to 0\n  return betaDeviation.value < 5 && gammaDeviation.value < 5;\n});\n\n// Handle device orientation event\nfunction handleOrientationEvent(event: DeviceOrientationEvent) {\n  deviceOrientation.value = {\n    alpha: event.alpha,\n    beta: event.beta,\n    gamma: event.gamma\n  };\n}\n\n// Request permission for device orientation (only needed for iOS 13+)\nasync function requestOrientationPermission() {\n  try {\n    // Check if the device requires permission (iOS 13+)\n    if (typeof DeviceOrientationEvent !== 'undefined' && \n        typeof (DeviceOrientationEvent as any).requestPermission === 'function') {\n      const permissionState = await (DeviceOrientationEvent as any).requestPermission();\n      if (permissionState === 'granted') {\n        permissionGranted.value = true;\n        window.addEventListener('deviceorientation', handleOrientationEvent);\n        startStabilityCheck();\n      } else {\n        errorMessage.value = 'Permission to access device orientation was denied';\n      }\n    } else {\n      // No permission required (Android, desktop browsers), directly add the event listener\n      console.log('No permission needed for this browser/device, proceeding directly');\n      permissionGranted.value = true;\n      window.addEventListener('deviceorientation', handleOrientationEvent);\n      startStabilityCheck();\n    }\n  } catch (error) {\n    console.error('Error requesting device orientation permission:', error);\n    errorMessage.value = 'Could not access device orientation';\n  }\n}\n\n// Start checking device stability\nfunction startStabilityCheck() {\n  if (stabilityInterval.value) clearInterval(stabilityInterval.value);\n  \n  stabilityInterval.value = window.setInterval(() => {\n    if (isLevelEnough.value) {\n      stabilityTime.value += 0.1; // Increment by 100ms\n      if (stabilityTime.value >= requiredStabilityTime) {\n        defuseSucceeded();\n      }\n    } else {\n      stabilityTime.value = 0; // Reset if device is moved\n    }\n  }, 100);\n}\n\n// Handle successful defuse\nfunction defuseSucceeded() {\n  targetAchieved.value = true;\n  if (stabilityInterval.value) {\n    clearInterval(stabilityInterval.value);\n    stabilityInterval.value = null;\n  }\n}\n\n// Navigate to success screen\nfunction proceedToSuccess() {\n  router.push('/');\n}\n\nonMounted(() => {\n  if (!isDeviceOrientationSupported.value) {\n    errorMessage.value = 'Device orientation is not supported on your device';\n  }\n});\n\nonUnmounted(() => {\n  if (stabilityInterval.value) {\n    clearInterval(stabilityInterval.value);\n    stabilityInterval.value = null;\n  }\n  window.removeEventListener('deviceorientation', handleOrientationEvent);\n});\n\n// Type declaration for the iOS version of DeviceOrientationEvent\ndeclare global {\n  interface DeviceOrientationEvent {\n    requestPermission?: () => Promise<'granted' | 'denied'>;\n  }\n}\n</script>\n\n<template>\n  <div class=\"defuse-bomb-container\">\n    <h1>Step 3: Defuse the Bomb</h1>\n    \n    <div class=\"timer-container\">\n      <CountdownTimer ref=\"timerRef\" :start=\"true\" />\n    </div>\n    \n    <div v-if=\"!isDeviceOrientationSupported\" class=\"error-message\">\n      <p>Your device doesn't support orientation detection, which is required for this challenge.</p>\n      <p>Please try on a device with accelerometer/gyroscope sensors.</p>\n    </div>\n    \n    <div v-else-if=\"errorMessage\" class=\"error-message\">\n      <p>{{ errorMessage }}</p>\n    </div>\n    \n    <div v-else class=\"challenge-container\">\n      <div class=\"instructions\">\n        <p>To defuse the bomb, you need to place your device on a flat surface and keep it perfectly level.</p>\n        <p>Hold it steady for {{ requiredStabilityTime }} seconds to complete the defusal process.</p>\n        <p class=\"warning\" v-if=\"!permissionGranted\">You need to grant permission to access your device's orientation sensors.</p>\n      </div>\n      \n      <div v-if=\"!permissionGranted\" class=\"permission-container\">\n        <button @click=\"requestOrientationPermission\" class=\"permission-button\">Grant Sensor Access</button>\n      </div>\n      \n      <div v-else class=\"orientation-container\">\n        <div class=\"bubble-level-container\">\n          <div class=\"bubble-level\">\n            <div class=\"bubble\" :style=\"{\n              transform: `translate(${deviceOrientation.gamma ? deviceOrientation.gamma * 3 : 0}px, ${deviceOrientation.beta ? deviceOrientation.beta * 3 : 0}px)`,\n              backgroundColor: isLevelEnough ? '#33ff33' : '#ff3333'\n            }\"></div>\n          </div>\n        </div>\n        \n        <div class=\"orientation-values\">\n          <div class=\"orientation-value\">\n            <label>X-axis (β):</label>\n            <span :class=\"{ 'good': betaDeviation !== null && betaDeviation < 5 }\">\n              {{ deviceOrientation.beta !== null ? deviceOrientation.beta.toFixed(2) : 'N/A' }}°\n            </span>\n          </div>\n          \n          <div class=\"orientation-value\">\n            <label>Y-axis (γ):</label>\n            <span :class=\"{ 'good': gammaDeviation !== null && gammaDeviation < 5 }\">\n              {{ deviceOrientation.gamma !== null ? deviceOrientation.gamma.toFixed(2) : 'N/A' }}°\n            </span>\n          </div>\n        </div>\n        \n        <div class=\"progress-container\">\n          <div class=\"progress-label\">Device Level: {{ Math.round(levelingAccuracy) }}%</div>\n          <div class=\"progress-bar\">\n            <div class=\"progress\" :style=\"{ width: `${levelingAccuracy}%` }\"></div>\n          </div>\n        </div>\n        \n        <div v-if=\"isLevelEnough\" class=\"stability-progress\">\n          <div class=\"stability-label\">Stabilizing: {{ stabilityTime.toFixed(1) }}/{{ requiredStabilityTime }}s</div>\n          <div class=\"stability-bar\">\n            <div class=\"stability-progress\" :style=\"{ width: `${(stabilityTime / requiredStabilityTime) * 100}%` }\"></div>\n          </div>\n          <div class=\"stability-message\">Hold steady!</div>\n        </div>\n      </div>\n      \n      <div v-if=\"targetAchieved\" class=\"success-panel\">\n        <h2>BOMB DEFUSED!</h2>\n        <p>The bomb has been successfully defused. Well done!</p>\n        <button @click=\"proceedToSuccess\" class=\"success-button\">Mission Complete</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style scoped>\n.defuse-bomb-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  color: #e0e0e0;\n  font-family: 'Courier New', monospace;\n}\n\nh1 {\n  color: #33ff33;\n  text-align: center;\n  margin-bottom: 2rem;\n}\n\n.timer-container {\n  margin-bottom: 2rem;\n}\n\n.error-message {\n  background-color: rgba(255, 0, 0, 0.3);\n  padding: 1rem;\n  border-radius: 8px;\n  margin-bottom: 1rem;\n  text-align: center;\n}\n\n.challenge-container {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n\n.instructions {\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: 1.5rem;\n  border-radius: 8px;\n  text-align: center;\n}\n\n.warning {\n  color: #ffff33;\n  font-weight: bold;\n  margin-top: 1rem;\n}\n\n.permission-container {\n  display: flex;\n  justify-content: center;\n  margin: 2rem 0;\n}\n\n.permission-button {\n  background-color: #33ff33;\n  color: black;\n  border: none;\n  padding: 1rem 2rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  border-radius: 8px;\n  cursor: pointer;\n  font-family: 'Courier New', monospace;\n  transition: all 0.3s ease;\n}\n\n.permission-button:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 15px rgba(51, 255, 51, 0.7);\n}\n\n.orientation-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 2rem;\n}\n\n.bubble-level-container {\n  width: 300px;\n  height: 300px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n}\n\n.bubble-level {\n  width: 200px;\n  height: 200px;\n  border: 3px solid #33ff33;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 0, 0.5);\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.bubble {\n  width: 30px;\n  height: 30px;\n  background-color: #ff3333;\n  border-radius: 50%;\n  position: absolute;\n  transition: all 0.3s ease;\n}\n\n.orientation-values {\n  display: flex;\n  justify-content: center;\n  gap: 2rem;\n}\n\n.orientation-value {\n  background-color: rgba(0, 0, 0, 0.7);\n  padding: 1rem;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.orientation-value label {\n  font-size: 0.9rem;\n  color: #999;\n  margin-bottom: 0.5rem;\n}\n\n.orientation-value span {\n  font-size: 1.5rem;\n  font-weight: bold;\n  color: #ff3333;\n}\n\n.orientation-value span.good {\n  color: #33ff33;\n}\n\n.progress-container {\n  width: 100%;\n  max-width: 400px;\n}\n\n.progress-label {\n  margin-bottom: 0.5rem;\n  text-align: center;\n}\n\n.progress-bar {\n  height: 20px;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.progress {\n  height: 100%;\n  background-color: #33ff33;\n  transition: width 0.3s ease;\n}\n\n.stability-progress {\n  margin-top: 1rem;\n  width: 100%;\n  max-width: 400px;\n  text-align: center;\n}\n\n.stability-label {\n  margin-bottom: 0.5rem;\n  color: #33ff33;\n  font-weight: bold;\n}\n\n.stability-bar {\n  height: 10px;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 5px;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n}\n\n.stability-progress {\n  height: 100%;\n  background-color: #33ff33;\n  transition: width 0.1s linear;\n}\n\n.stability-message {\n  color: #33ff33;\n  font-style: italic;\n  animation: blink 1s infinite;\n}\n\n.success-panel {\n  background-color: rgba(51, 255, 51, 0.3);\n  padding: 2rem;\n  border-radius: 8px;\n  margin-top: 2rem;\n  text-align: center;\n  animation: successPulse 2s infinite;\n}\n\n.success-panel h2 {\n  color: #33ff33;\n  font-size: 2rem;\n  margin-bottom: 1rem;\n}\n\n.success-button {\n  background-color: #33ff33;\n  color: black;\n  border: none;\n  padding: 0.8rem 1.5rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  border-radius: 8px;\n  cursor: pointer;\n  margin-top: 1rem;\n  font-family: 'Courier New', monospace;\n  transition: all 0.3s ease;\n}\n\n.success-button:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 15px rgba(51, 255, 51, 0.7);\n}\n\n@keyframes blink {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0.5; }\n}\n\n@keyframes successPulse {\n  0% { box-shadow: 0 0 5px rgba(51, 255, 51, 0.7); }\n  50% { box-shadow: 0 0 20px rgba(51, 255, 51, 0.9); }\n  100% { box-shadow: 0 0 5px rgba(51, 255, 51, 0.7); }\n}\n</style>"],"names":["requiredStabilityTime","router","useRouter","timerRef","ref","isDeviceOrientationSupported","deviceOrientation","errorMessage","permissionGranted","targetAchieved","stabilityTime","stabilityInterval","betaDeviation","computed","gammaDeviation","levelingAccuracy","maxBetaDeviation","maxGammaDeviation","betaAccuracy","gammaAccuracy","isLevelEnough","handleOrientationEvent","event","requestOrientationPermission","startStabilityCheck","error","defuseSucceeded","proceedToSuccess","onMounted","onUnmounted"],"mappings":"u4BAqBMA,EAAwB,0CAhB9B,MAAMC,EAASC,EAAU,EACnBC,EAAWC,EAAgD,IAAI,EAG/DC,EAA+BD,EAAI,CAAC,CAAC,OAAO,sBAAsB,EAClEE,EAAoBF,EAAyE,CACjG,MAAO,KACP,KAAM,KACN,MAAO,IAAA,CACR,EACKG,EAAeH,EAAI,EAAE,EACrBI,EAAoBJ,EAAI,EAAK,EAG7BK,EAAiBL,EAAI,EAAK,EAC1BM,EAAgBN,EAAI,CAAC,EAErBO,EAAoBP,EAAmB,IAAI,EAG3CQ,EAAgBC,EAAS,IACzBP,EAAkB,MAAM,OAAS,KAAa,KAC3C,KAAK,IAAIA,EAAkB,MAAM,IAAI,CAC7C,EAEKQ,EAAiBD,EAAS,IAC1BP,EAAkB,MAAM,QAAU,KAAa,KAC5C,KAAK,IAAIA,EAAkB,MAAM,KAAK,CAC9C,EAEKS,EAAmBF,EAAS,IAAM,CACtC,GAAID,EAAc,QAAU,MAAQE,EAAe,QAAU,KAAa,MAAA,GAG1E,MAAME,EAAmB,GACnBC,EAAoB,GAEpBC,EAAe,KAAK,IAAI,EAAG,IAAON,EAAc,MAAQI,EAAmB,GAAI,EAC/EG,EAAgB,KAAK,IAAI,EAAG,IAAOL,EAAe,MAAQG,EAAoB,GAAI,EAEjF,OAAA,KAAK,IAAIC,EAAcC,CAAa,CAAA,CAC5C,EAGKC,EAAgBP,EAAS,IACzBD,EAAc,QAAU,MAAQE,EAAe,QAAU,KAAa,GAGnEF,EAAc,MAAQ,GAAKE,EAAe,MAAQ,CAC1D,EAGD,SAASO,EAAuBC,EAA+B,CAC7DhB,EAAkB,MAAQ,CACxB,MAAOgB,EAAM,MACb,KAAMA,EAAM,KACZ,MAAOA,EAAM,KACf,CAAA,CAIF,eAAeC,GAA+B,CACxC,GAAA,CAEE,OAAO,uBAA2B,KAClC,OAAQ,uBAA+B,mBAAsB,WACvC,MAAO,uBAA+B,kBAAkB,IACxD,WACtBf,EAAkB,MAAQ,GACnB,OAAA,iBAAiB,oBAAqBa,CAAsB,EAC/CG,EAAA,GAEpBjB,EAAa,MAAQ,sDAIvB,QAAQ,IAAI,mEAAmE,EAC/EC,EAAkB,MAAQ,GACnB,OAAA,iBAAiB,oBAAqBa,CAAsB,EAC/CG,EAAA,SAEfC,EAAO,CACN,QAAA,MAAM,kDAAmDA,CAAK,EACtElB,EAAa,MAAQ,qCAAA,CACvB,CAIF,SAASiB,GAAsB,CACzBb,EAAkB,OAAqB,cAAAA,EAAkB,KAAK,EAEhDA,EAAA,MAAQ,OAAO,YAAY,IAAM,CAC7CS,EAAc,OAChBV,EAAc,OAAS,GACnBA,EAAc,OAASV,GACT0B,EAAA,GAGlBhB,EAAc,MAAQ,GAEvB,GAAG,CAAA,CAIR,SAASgB,GAAkB,CACzBjB,EAAe,MAAQ,GACnBE,EAAkB,QACpB,cAAcA,EAAkB,KAAK,EACrCA,EAAkB,MAAQ,KAC5B,CAIF,SAASgB,GAAmB,CAC1B1B,EAAO,KAAK,GAAG,CAAA,CAGjB,OAAA2B,EAAU,IAAM,CACTvB,EAA6B,QAChCE,EAAa,MAAQ,qDACvB,CACD,EAEDsB,EAAY,IAAM,CACZlB,EAAkB,QACpB,cAAcA,EAAkB,KAAK,EACrCA,EAAkB,MAAQ,MAErB,OAAA,oBAAoB,oBAAqBU,CAAsB,CAAA,CACvE"}